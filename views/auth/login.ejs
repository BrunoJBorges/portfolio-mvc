<h1>Login</h1>

<form id="loginForm">
  <div>
    <label for="nome">Nome:</label>
    <input type="text" id="nome" name="nome" required>
  </div>
  <br>
  <div>
    <label for="senha">Senha:</label>
    <input type="password" id="senha" name="senha" required>
  </div>
  <br>
  <button type="submit">Entrar</button>
</form>

<p id="error" style="color: red;"></p>

<script>
  // Função chamada quando o formulário é enviado
  document.getElementById('loginForm').addEventListener('submit', handleLogin);

  async function handleLogin(event) {
    event.preventDefault(); // Impede o envio do formulário tradicional

    const nome = document.getElementById('nome').value;
    const senha = document.getElementById('senha').value;

    try {
      // Fazendo a requisição POST para o backend de login
      const response = await fetch('/login', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ nome, senha }),
      });

      const data = await response.json();

      if (!response.ok) {
        // Exibe a mensagem de erro caso a resposta não seja positiva
        document.getElementById('error').textContent = data.message;
      } else {
        // Armazena o token no localStorage após login bem-sucedido
        localStorage.setItem('token', data.token);

        // Redireciona de acordo com o tipo de menu
        if (data.tipoMenu === 'admin') {
          window.location.href = '/admin/dashboard'; // Redireciona para o painel do admin
        } else {
          window.location.href = '/aluno/dashboard'; // Redireciona para o painel do aluno
        }
      }
    } catch (error) {
      // Exibe erro caso ocorra durante a requisição
      document.getElementById('error').textContent = 'Erro ao fazer login.';
    }
  }
</script>
